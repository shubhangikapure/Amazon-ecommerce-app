{"ast":null,"code":"// use local storage as your db for now\nconst addToDb = id => {\n  const exists = getDb();\n  let shopping_cart = {};\n  if (!exists) {\n    shopping_cart[id] = 1;\n  } else {\n    shopping_cart = JSON.parse(exists);\n    if (shopping_cart[id]) {\n      const newCount = shopping_cart[id] + 1;\n      shopping_cart[id] = newCount;\n    } else {\n      shopping_cart[id] = 1;\n    }\n  }\n  updateDb(shopping_cart);\n};\nconst getDb = () => localStorage.getItem('shopping_cart');\nconst updateDb = cart => {\n  localStorage.setItem('shopping_cart', JSON.stringify(cart));\n};\nconst removeFromDb = id => {\n  const exists = getDb();\n  if (!exists) {} else {\n    const shopping_cart = JSON.parse(exists);\n    delete shopping_cart[id];\n    updateDb(shopping_cart);\n  }\n};\nconst getStoredCart = () => {\n  const exists = getDb();\n  return exists ? JSON.parse(exists) : {};\n};\nconst clearTheCart = () => {\n  localStorage.removeItem('shopping_cart');\n};\nexport { addToDb, removeFromDb as deleteFromDb, clearTheCart, getStoredCart };","map":{"version":3,"names":["addToDb","id","exists","getDb","shopping_cart","JSON","parse","newCount","updateDb","localStorage","getItem","cart","setItem","stringify","removeFromDb","getStoredCart","clearTheCart","removeItem","deleteFromDb"],"sources":["C:/Users/planet/Downloads/ecommerce-project-react-main/ecommerce-project-react-main/src/utilities/fakedb.js"],"sourcesContent":["// use local storage as your db for now\nconst addToDb = id => {\n  const exists = getDb();\n  let shopping_cart = {};\n  if (!exists) {\n    shopping_cart[id] = 1;\n  }\n  else {\n    shopping_cart = JSON.parse(exists);\n    if (shopping_cart[id]) {\n      const newCount = shopping_cart[id] + 1;\n      shopping_cart[id] = newCount;\n    }\n    else {\n      shopping_cart[id] = 1;\n    }\n  }\n  updateDb(shopping_cart);\n}\n\nconst getDb = () => localStorage.getItem('shopping_cart');\nconst updateDb = cart => {\n  localStorage.setItem('shopping_cart', JSON.stringify(cart));\n}\n\nconst removeFromDb = id => {\n  const exists = getDb();\n  if (!exists) {\n\n  }\n  else {\n    const shopping_cart = JSON.parse(exists);\n    delete shopping_cart[id];\n    updateDb(shopping_cart);\n  }\n}\n\nconst getStoredCart = () => {\n  const exists = getDb();\n  return exists ? JSON.parse(exists) : {};\n}\n\nconst clearTheCart = () => {\n  localStorage.removeItem('shopping_cart');\n}\n\nexport { addToDb, removeFromDb as deleteFromDb, clearTheCart, getStoredCart }\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAGC,EAAE,IAAI;EACpB,MAAMC,MAAM,GAAGC,KAAK,CAAC,CAAC;EACtB,IAAIC,aAAa,GAAG,CAAC,CAAC;EACtB,IAAI,CAACF,MAAM,EAAE;IACXE,aAAa,CAACH,EAAE,CAAC,GAAG,CAAC;EACvB,CAAC,MACI;IACHG,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC;IAClC,IAAIE,aAAa,CAACH,EAAE,CAAC,EAAE;MACrB,MAAMM,QAAQ,GAAGH,aAAa,CAACH,EAAE,CAAC,GAAG,CAAC;MACtCG,aAAa,CAACH,EAAE,CAAC,GAAGM,QAAQ;IAC9B,CAAC,MACI;MACHH,aAAa,CAACH,EAAE,CAAC,GAAG,CAAC;IACvB;EACF;EACAO,QAAQ,CAACJ,aAAa,CAAC;AACzB,CAAC;AAED,MAAMD,KAAK,GAAGA,CAAA,KAAMM,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;AACzD,MAAMF,QAAQ,GAAGG,IAAI,IAAI;EACvBF,YAAY,CAACG,OAAO,CAAC,eAAe,EAAEP,IAAI,CAACQ,SAAS,CAACF,IAAI,CAAC,CAAC;AAC7D,CAAC;AAED,MAAMG,YAAY,GAAGb,EAAE,IAAI;EACzB,MAAMC,MAAM,GAAGC,KAAK,CAAC,CAAC;EACtB,IAAI,CAACD,MAAM,EAAE,CAEb,CAAC,MACI;IACH,MAAME,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC;IACxC,OAAOE,aAAa,CAACH,EAAE,CAAC;IACxBO,QAAQ,CAACJ,aAAa,CAAC;EACzB;AACF,CAAC;AAED,MAAMW,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAMb,MAAM,GAAGC,KAAK,CAAC,CAAC;EACtB,OAAOD,MAAM,GAAGG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,GAAG,CAAC,CAAC;AACzC,CAAC;AAED,MAAMc,YAAY,GAAGA,CAAA,KAAM;EACzBP,YAAY,CAACQ,UAAU,CAAC,eAAe,CAAC;AAC1C,CAAC;AAED,SAASjB,OAAO,EAAEc,YAAY,IAAII,YAAY,EAAEF,YAAY,EAAED,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}